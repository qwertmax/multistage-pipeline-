name: Deployment Pipeline

concurrency: 
  group: deployment-pipeline
  cancel-in-progress: false

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'Deploy to Environment'
        options:
          - stage
          - prod
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    outputs:
      build_completed: ${{ steps.set-output.outputs.build_completed }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Build
        run: echo "Building application"
        
      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app-artifacts
          path: .
          retention-days: 5
          
      - name: Set build completion
        id: set-output
        run: echo "build_completed=true" >> $GITHUB_OUTPUT

  deploy-stage:
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging.example.com
    if: |
      github.event_name == 'workflow_dispatch' && 
      github.event.inputs.environment == 'stage'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: app-artifacts
          
      - name: Deploy to staging
        run: echo "Deploying to staging"

  deploy-prod:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://production.example.com
    if: |
      github.event_name == 'workflow_dispatch' && 
      github.event.inputs.environment == 'prod'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: app-artifacts
          
      - name: Deploy to production
        run: echo "Deploying to production"